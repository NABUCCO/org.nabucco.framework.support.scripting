/*
* Copyright 2010 PRODYNA AG
*
* Licensed under the Eclipse Public License (EPL), Version 1.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.opensource.org/licenses/eclipse-1.0.php or
* http://nabuccosource.org/License.html
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package org.nabucco.framework.support.scripting.facade.datatype;

import org.nabucco.framework.base.facade.datatype.Description;
import org.nabucco.framework.base.facade.datatype.NabuccoDatatype;
import org.nabucco.framework.base.facade.datatype.Name;
import org.nabucco.framework.base.facade.datatype.Owner;
import org.nabucco.framework.base.facade.datatype.code.Code;
import org.nabucco.framework.support.scripting.facade.datatype.ScriptCode;
import org.nabucco.framework.support.scripting.facade.datatype.ScriptData;
import org.nabucco.framework.support.scripting.facade.datatype.ScriptSourceCode;
import org.nabucco.framework.support.scripting.facade.datatype.ScriptType;

@Author			Frank Ratschinski
@Company		PRODYNA AG
@Date			2010-03-29
@Description	Definition of a script.
@Version		1.0
public Datatype Script extends NabuccoDatatype {

	@Description		The name of the script.
	private Basetype Name[1] name;
	
	@Description		A brief description of the script.
	private Basetype Description[0..1] description;
	
	@Description		The owner of the script
	private Basetype Owner[1] owner;
	
	@Description		The type (language) of the script.
	private Enumeration ScriptType[1] type;
	
	@CodePath			nabucco.scripting.source
	@Description		The context (origin) of this script.
	private Datatype Code[1] contextType;
	
	@MaxLength			64000
	@Description		The script source code.
	private Basetype ScriptSourceCode[1] sourcecode;
	
	@Description		The script code. May be null for JavaScript and other script languages.
	private Basetype ScriptCode[0..1] code;
	
	@FetchStrategy		LAZY
	@Description 		The input parameters of the script. These are available in the javascript environment under their given name, but are not returned as the results of the script.
	private Datatype ScriptData[0..*] inputData;

	@FetchStrategy		LAZY
	@Description 		The output parameters of the script (results of the script). As the input parameters, these are also available under their given name, but are returned as results of the script (basically, these are kind of call-by-reference parameters). 
	private Datatype ScriptData[0..*] outputData;
	
}